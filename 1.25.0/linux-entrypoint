#!/bin/bash

set -ex

CODE_PATH=/code
cd "${CODE_PATH}"
git rev-parse --short HEAD >compose/GITSHA
pyinstaller_ver=$(grep "^pyinstaller==" requirements-build.txt | cut -d'=' -f3)

VENV="${CODE_PATH}"/.tox/py37

mkdir -p dist
chmod 777 dist

"${VENV}"/bin/pip3 install -q -r requirements-build.txt

export PATH="${CODE_PATH}/pyinstaller:${PATH}"

if [ ! -z "${BUILD_BOOTLOADER}" ]; then
    # Build bootloader for alpine; develop is the main branch
    git clone --single-branch --branch develop https://github.com/pyinstaller/pyinstaller.git /tmp/pyinstaller
    cd /tmp/pyinstaller/bootloader
    # Checkout commit corresponding to version in requirements-build
    git checkout v${pyinstaller_ver}
    "${VENV}"/bin/python3 ./waf configure --no-lsb all
    "${VENV}"/bin/pip3 install ..
    cd "${CODE_PATH}"
    rm -Rf /tmp/pyinstaller
else
    echo "NOT compiling bootloader!!!"
fi

"${VENV}"/bin/pyinstaller --exclude-module pycrypto --exclude-module PyInstaller docker-compose.spec
ls -la dist/
ldd dist/docker-compose
mv dist/docker-compose /usr/local/bin
docker-compose version
